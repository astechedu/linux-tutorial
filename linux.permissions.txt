>>> Linux CMDS <<<<<

--------------------------------------------------------------------------
Commands: uptime, wall, du, df -h, free, cat /etc/group, cat /etc/passwd, ps -ef, ls - irt, 

--------------------------------------------------------------------------

>>Create User & Remove: 

sudo adduser username                //Add User
sudo usermod -aG sudo username       //Addin User to sudo group
sudo deluser username                //Remove User
sudo deluser --remove-home username  //Remove User with home dir

sudo groupadd groupname                          //Add new group
sudo chgrp groupname /usr/local/groupname/repos
sudo usermod -aG groupname username             //Add User to Group

sudo groupdel groupname             // Remove Group
sudo gpasswd -d username groupname  //Remove user from group

//Note: 
Note: The chown command changes the owning user. When using chown, you need to specify the user and group name, while chgrp only requires the group name.

---------------------------------------------------------------------------

>>CHGRP:

//chgrp Command Syntax Explained:
https://phoenixnap.com/kb/chgrp-command 

chgrp [OPTION] [GROUP_NAME] [DIRECTORY/FILE_NAME]

    [OPTION] - Additional options. You can use the command without them.
    [GROUP_NAME] - The group you want to assign the file to.
    [DIRECTORY/FILE_NAME] - The target directory/file.
   
//Check user grup id    
id -g [Username]   

//Change Directory Group
Syntax: 
chgrp [GROUP_NAME] [DIRECTORY_NAME]

sudo chgrp phoenixnap example              //Changing group to specified dir or file

//Recursively Change Group Ownership
sudo chgrp -R [GROUP_NAME] [DIRECTORY_NAME]    //All dir and its subdirs
sudo chgrp -R phoenixnap example


//Change Group to Match Reference File

chgrp [OPTION] --reference=[RFILE_NAME] [FILE_NAME]

sudo chgrp --reference=test atom_273.snap


//Display chgrp Execution Details
sudo chgrp -c -R [GROUP_NAME] [DIRECTORY/FILE_NAME]
sudo chgrp -c -R bosko example

//Hide chgrp Command Errors
sudo chgrp -f [GROUP_NAME] [DIRECTORY/FILE_NAME]
sudo chgrp phoenixnap nonexistentfile

-------------------------------------------------------------
umask 

su -paulUser
less /etc/bash.bashrc


-------------------------------------------------------------

>>Permissions Using chmod:

//How do I use chmod to change permissions?:
//How to see the permissions   (ls -ltr)

Settings Permissions With chmod

>>The Octal Notations: 

-------------------------------------------------
Octal   Binary   File Mode    Permission Type      |
-------------------------------------------------
0       000      ---          No 
1       001      --x          Execute only  
2       010      -w-          Write only
3       011      -wx          Write & Execute
4       100      r--          Read only
5       101      r-x          Read & Execute
6       110      rw-          Read & Write        
7       111      rwx          Read, Weite & Execute
-------------------------------------------------

  user(current)   group other
     rwx           rwx   rwx
     ---           ---   ---

chmod 777 [file name]
chmod 435 [file name]
chmod 775 [file name]
chmod u=r,g=wx,o=rx [file name]
chmod ug+rwx,o=rx [file name]
chmod ugo+rwx [file name]


chmoe o 
chmod o+
chmod o+x
chmod o+x index.php
chmod ugo-rwx index.php
chmod ug+rw, o-x index.php



chmod [references][operator][modes] filename

Ex: chmod u+x file1

    read    (r)
    write   (w)
    execute (x)

    user  (u)
    group (g)
    other (o)
    all   (a)


$ ls -l Or ls -ltr

total 28  
         (   rwx-rwx-rws    )
         
-rw-r--r--  1 user       group     273 Mar 24 11:28 file1
-rwxrwxrwx  1 user       group    1449 Jan 29 14:01 file2
-rwx------  1 user       group    4119 Jan 26 13:22 file3


chmod [references][operator][modes] filename

Ex: 
chmod u+x file1     //Execute Permission
chmod o-w file2     //Remove Permission
chmod ugo=rx file3  //Readable & Executable to all
chmod a=rx file3    // a=ugo 

//For more information on changing permissions, run this command: 
man chmod          //


--------------------------------------------------------------

CHOWN: 

//Change the owner of a File (Using user name)


sudo chown <username> <File name> 

Ex:
sudo chown jtp Demo.txt 

sudo chown 1000 Demo.txt     //Change the owner of a file

//Change the Group of a File
sudo chown :groupname Demo.txt 
OR
sudo chown :GID Demo.txt
sudo chown :adm Demo.txt 


//Change the User and Group Name
sudo chown <User name/UID>:<Group name/GID> <File name> 
sudo chown jtp:adm Demo.txt 

chown [OPTION] OWNER[:GROUP] FILE(s)

//How to Check the Current File Ownership

cd /home/Hostinger

ls -l

-rw-r--r-- 1 Hostinger root 0 May 23 06:58 chownSample.txt


//How to Change the Owner of a File
chown user FILE(s)
chown newowner chownSample.txt
-rw-r--r-- 1 newowner root 0 May 23 06:58 chownSample.txt

//How to Edit Group Ownership

chown OWNER[:group] FILE(s)

chown newowner:newownergroup chownSample.txt
-rw-r--r-- 1 newowner newownergroup 0 May 23 07:00 chownSample.txt
chown :newownergroup chownSample.txt

//How to Change Directory Ownership
drwxr-xr-x 2 Hostinger root 4096 May 23 07:41 TestPermissions

chown newowner        /TestPermissions
chown :newownergroup  /TestPermissions

chown newowner:newownergroup    /TestPermissions

chown [OPTIONS] [OWNER][:GROUP] file1 file2

chown newowner:newownergroup /home/TestPermissions/ /home/TestPermissions/chownSample.txt

//How to Use Recursive Chown

chown -R [USER][:GROUP] Directory
chown -R newowner /home/TestPermissions/

//How to Edit the Owner of a Symbolic Link

ln -s chownSample.txt mysymlink


output:

-rw-r--r-- 1 root newownergroup 0 May 24 07:00 chownSample.txtlrwxr-xr-x 1 root newownergroup 0 May 24 07:00 mysymlink -> chownSample.txt


chown newowner mysymlink   //CMD


output:
rw-r--r-- 1 newowner newownergroup 0 May 24 07:00 chownSample.txtlrwxr-xr-x 1 root newownergroup 0 May 24 07:00 mysymlink -> chownSample.txt

chown -h newowner mysymlink    //CMD


//Linux Chown Command Syntax

//How to Check Ownership of a File in Linux
ls -l


//How to Change the Owner of a File

chown NewUser FILE
chown test sample


//Change the Owner of a File With UID
chown 1002 sample2

//Change Ownership of Multiple Linux Files

chown root sample2 sample3
chown root sample3 Dir1


//How to Change the Group of a File

chown :NewGroup FILE
chown :group3 sample3

//Change the Group of a File Using GID

chown :1003 sample
chown :1003 sample
chown NewUser:NewGroup FILE
chown linuxuser:group3 sample3

//Change Group to a Users Login Group

chown NewUser: FILE
chown linuxuser: sample3

//Transfer Ownership and Group Settings from One File to Another

chown —reference=ReferenceFILE
chown —from=CurrentUser:CurrentGroup NewUser:NewGroup FILE
chown —from=root:group2 linuxuser:group3 sample3

---------------------------------------------------------

PHP Install On Ubuntu:


















































